#!/bin/bash
#
# Copyright 2016-2017 HLRS, University of Stuttgart
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#=============================================================================
#
#         FILE: epilogue.parallel
#
#        USAGE: epilogue.parallel <default PBS epilogue.parallel parameters>
#
#  DESCRIPTION: Ensures that all VMs are stopped and remaining user processes
#               are killed, IOcm and vRDMA are teared down, also job related
#               snap telemetry monitoring task is stopped.
#
#      OPTIONS: Refer to Torque documentation.
# REQUIREMENTS: File is owned by root and permissions are set to 500.
#         BUGS: ---
#        NOTES: ---
#       AUTHOR: Nico Struckmann, struckmann@hlrs.de
#      COMPANY: HLRS, University of Stuttgart
#      VERSION: 0.2
#      CREATED:
#     REVISION: May 08th 2017
#
#    CHANGELOG
#         v0.2: refactoring and clean up
#
#=============================================================================

#============================================================================#
#                                                                            #
#                          GLOBAL CONFIGURATION                              #
#                                                                            #
#============================================================================#

# source the global profile, for getting DEBUG and TRACE flags if set
source /etc/profile.d/99-mikelangelo-hpc_stack.sh;

#
# source the global functions and configuration
# order below is as required, do not change
#
source "$VTORQUE_DIR/common/const.sh" $@;
source "$VTORQUE_DIR/common/config.sh";
source "$VTORQUE_DIR/common/root-functions.sh";


#============================================================================#
#                                                                            #
#                          SCRIPT CONFIGURATION                              #
#                                                                            #
#============================================================================#


#============================================================================#
#                                                                            #
#                               FUNCTIONS                                    #
#                                                                            #
#============================================================================#


#============================================================================#
#                                                                            #
#                                 MAIN                                       #
#                                                                            #
#============================================================================#

# logging
logInfoMsg "Root epilogue.parallel script started.";
logTraceMsg "Running Epilogue-Parallel as '$(id)', file: '$(basename ${BASH_SOURCE[0]})'";
logTraceMsg "~~~~~~~~~~Environment_Start~~~~~~~~~~\n$(env)\n~~~~~~~~~~~Environment_End~~~~~~~~~~~";

# VM job ?
if isVMJob; then

  # clear up vRDMA config
  tearDownvRDMA_P1;

  # clear up IOcm config
  teardownIOcm;

  # copy libvirt log from global logs dir to vm job dir (for vm jobs)
  copyVMlogFile;

  # clean up
  cleanUpVMs;

fi

# stop snap monitoring task
stopSnapTask;

# in case there was a script for this in the $TORQUE_HOME/mom_priv
# that has been renamed (by the Makefile) to *.orig, call it now
runScriptPreviouslyInPlace "$(basename ${BASH_SOURCE[0]})" $@;

# clean up user processes ?
if $KILL_USER_PROCESSES_AFTER_JOB; then
  # kill all remaining user processes
  logDebugMsg "Killing any remaining user processes for user '$USER_NAME'.";
  pkill -u $USER_NAME;
fi

# remove all job related tmp files, created by vTorque
cleanupTmpFiles;

logInfoMsg "Root epilogue.parallel finished.";

# print the consumed time in debug mode
runTimeStats;

# exit the job
exit 0;
